// <auto-generated />
using System;
using CompanyApp.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompanyApp.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20230310172635_AddEmployeeClientrelationship")]
    partial class AddEmployeeClientrelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BranchClient", b =>
                {
                    b.Property<int>("BranchesID")
                        .HasColumnType("int");

                    b.Property<int>("ClientsCID")
                        .HasColumnType("int");

                    b.HasKey("BranchesID", "ClientsCID");

                    b.HasIndex("ClientsCID");

                    b.ToTable("BranchClient");
                });

            modelBuilder.Entity("CompanyApp.Entites.Branch", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("CompanyApp.Entites.Client", b =>
                {
                    b.Property<int>("CID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CID"));

                    b.Property<decimal>("Deposit")
                        .HasColumnType("money")
                        .HasColumnName("ClientDeposit");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("MName")
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)")
                        .IsFixedLength();

                    b.HasKey("CID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("CompanyApp.Entites.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("BranchID")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("MName")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("Money");

                    b.HasKey("ID");

                    b.HasIndex("BranchID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("CompanyApp.Entites.EmployeeClient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ClientCID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Visit")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ClientCID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("EmployeeClient");
                });

            modelBuilder.Entity("BranchClient", b =>
                {
                    b.HasOne("CompanyApp.Entites.Branch", null)
                        .WithMany()
                        .HasForeignKey("BranchesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyApp.Entites.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientsCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CompanyApp.Entites.Employee", b =>
                {
                    b.HasOne("CompanyApp.Entites.Branch", "Branch")
                        .WithMany("Employees")
                        .HasForeignKey("BranchID");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("CompanyApp.Entites.EmployeeClient", b =>
                {
                    b.HasOne("CompanyApp.Entites.Client", "Client")
                        .WithMany("EmployeeClients")
                        .HasForeignKey("ClientCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyApp.Entites.Employee", "Employee")
                        .WithMany("EmployeeClients")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CompanyApp.Entites.Branch", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CompanyApp.Entites.Client", b =>
                {
                    b.Navigation("EmployeeClients");
                });

            modelBuilder.Entity("CompanyApp.Entites.Employee", b =>
                {
                    b.Navigation("EmployeeClients");
                });
#pragma warning restore 612, 618
        }
    }
}
